<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.his.mapper.PrescriptionMapper">
  <resultMap id="BaseResultMap" type="cn.his.entity.Prescription">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="MedicalID" jdbcType="INTEGER" property="medicalid" />
    <result column="RegistID" jdbcType="INTEGER" property="registid" />
    <result column="UserID" jdbcType="INTEGER" property="userid" />
    <result column="PrescriptionName" jdbcType="VARCHAR" property="prescriptionname" />
    <result column="PrescriptionTime" jdbcType="TIMESTAMP" property="prescriptiontime" />
    <result column="PrescriptionState" jdbcType="INTEGER" property="prescriptionstate" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, MedicalID, RegistID, UserID, PrescriptionName, PrescriptionTime, PrescriptionState
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prescription
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prescription
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.his.entity.Prescription">
    insert into prescription (ID, MedicalID, RegistID, 
      UserID, PrescriptionName, PrescriptionTime, 
      PrescriptionState)
    values (#{id,jdbcType=INTEGER}, #{medicalid,jdbcType=INTEGER}, #{registid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{prescriptionname,jdbcType=VARCHAR}, #{prescriptiontime,jdbcType=TIMESTAMP}, 
      #{prescriptionstate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.his.entity.Prescription">
    insert into prescription
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="medicalid != null">
        MedicalID,
      </if>
      <if test="registid != null">
        RegistID,
      </if>
      <if test="userid != null">
        UserID,
      </if>
      <if test="prescriptionname != null">
        PrescriptionName,
      </if>
      <if test="prescriptiontime != null">
        PrescriptionTime,
      </if>
      <if test="prescriptionstate != null">
        PrescriptionState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="medicalid != null">
        #{medicalid,jdbcType=INTEGER},
      </if>
      <if test="registid != null">
        #{registid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="prescriptionname != null">
        #{prescriptionname,jdbcType=VARCHAR},
      </if>
      <if test="prescriptiontime != null">
        #{prescriptiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="prescriptionstate != null">
        #{prescriptionstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.his.entity.Prescription">
    update prescription
    <set>
      <if test="medicalid != null">
        MedicalID = #{medicalid,jdbcType=INTEGER},
      </if>
      <if test="registid != null">
        RegistID = #{registid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="prescriptionname != null">
        PrescriptionName = #{prescriptionname,jdbcType=VARCHAR},
      </if>
      <if test="prescriptiontime != null">
        PrescriptionTime = #{prescriptiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="prescriptionstate != null">
        PrescriptionState = #{prescriptionstate,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.his.entity.Prescription">
    update prescription
    set MedicalID = #{medicalid,jdbcType=INTEGER},
      RegistID = #{registid,jdbcType=INTEGER},
      UserID = #{userid,jdbcType=INTEGER},
      PrescriptionName = #{prescriptionname,jdbcType=VARCHAR},
      PrescriptionTime = #{prescriptiontime,jdbcType=TIMESTAMP},
      PrescriptionState = #{prescriptionstate,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>