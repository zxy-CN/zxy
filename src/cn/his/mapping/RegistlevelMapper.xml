<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.his.mapper.RegistLevelMapper">
  <resultMap id="BaseResultMap" type="cn.his.entity.RegistLevel">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="RegistCode" jdbcType="VARCHAR" property="registcode" />
    <result column="RegistName" jdbcType="VARCHAR" property="registname" />
    <result column="SequenceNo" jdbcType="INTEGER" property="sequenceno" />
    <result column="RegistFee" jdbcType="DECIMAL" property="registfee" />
    <result column="RegistQuota" jdbcType="INTEGER" property="registquota" />
    <result column="DelMark" jdbcType="INTEGER" property="delmark" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, RegistCode, RegistName, SequenceNo, RegistFee, RegistQuota, DelMark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from regist_level
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from regist_level
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.his.entity.RegistLevel">
    insert into regist_level (ID, RegistCode, RegistName, 
      SequenceNo, RegistFee, RegistQuota, 
      DelMark)
    values (#{id,jdbcType=INTEGER}, #{registcode,jdbcType=VARCHAR}, #{registname,jdbcType=VARCHAR}, 
      #{sequenceno,jdbcType=INTEGER}, #{registfee,jdbcType=DECIMAL}, #{registquota,jdbcType=INTEGER}, 
      #{delmark,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.his.entity.RegistLevel">
    insert into regist_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="registcode != null">
        RegistCode,
      </if>
      <if test="registname != null">
        RegistName,
      </if>
      <if test="sequenceno != null">
        SequenceNo,
      </if>
      <if test="registfee != null">
        RegistFee,
      </if>
      <if test="registquota != null">
        RegistQuota,
      </if>
      <if test="delmark != null">
        DelMark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="registcode != null">
        #{registcode,jdbcType=VARCHAR},
      </if>
      <if test="registname != null">
        #{registname,jdbcType=VARCHAR},
      </if>
      <if test="sequenceno != null">
        #{sequenceno,jdbcType=INTEGER},
      </if>
      <if test="registfee != null">
        #{registfee,jdbcType=DECIMAL},
      </if>
      <if test="registquota != null">
        #{registquota,jdbcType=INTEGER},
      </if>
      <if test="delmark != null">
        #{delmark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.his.entity.RegistLevel">
    update regist_level
    <set>
      <if test="registcode != null">
        RegistCode = #{registcode,jdbcType=VARCHAR},
      </if>
      <if test="registname != null">
        RegistName = #{registname,jdbcType=VARCHAR},
      </if>
      <if test="sequenceno != null">
        SequenceNo = #{sequenceno,jdbcType=INTEGER},
      </if>
      <if test="registfee != null">
        RegistFee = #{registfee,jdbcType=DECIMAL},
      </if>
      <if test="registquota != null">
        RegistQuota = #{registquota,jdbcType=INTEGER},
      </if>
      <if test="delmark != null">
        DelMark = #{delmark,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.his.entity.RegistLevel">
    update regist_level
    set RegistCode = #{registcode,jdbcType=VARCHAR},
      RegistName = #{registname,jdbcType=VARCHAR},
      SequenceNo = #{sequenceno,jdbcType=INTEGER},
      RegistFee = #{registfee,jdbcType=DECIMAL},
      RegistQuota = #{registquota,jdbcType=INTEGER},
      DelMark = #{delmark,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>