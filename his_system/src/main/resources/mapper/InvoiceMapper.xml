<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.his.mapper.InvoiceMapper">
  <resultMap id="BaseResultMap" type="cn.his.entity.Invoice">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="InvoiceNum" jdbcType="VARCHAR" property="invoicenum" />
    <result column="Money" jdbcType="DECIMAL" property="money" />
    <result column="State" jdbcType="INTEGER" property="state" />
    <result column="CreationTime" jdbcType="TIMESTAMP" property="creationtime" />
    <result column="UserID" jdbcType="INTEGER" property="userid" />
    <result column="RegistID" jdbcType="INTEGER" property="registid" />
    <result column="FeeType" jdbcType="INTEGER" property="feetype" />
    <result column="Back" jdbcType="VARCHAR" property="back" />
    <result column="DailyState" jdbcType="INTEGER" property="dailystate" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, InvoiceNum, Money, State, CreationTime, UserID, RegistID, FeeType, Back, DailyState
  </sql>
  <select id="selectByRegistID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invoice
    where RegistID = #{registId,jdbcType=INTEGER}
  </select>

  <select id="selectMaxAndMin" parameterType="hashmap" resultType="hashmap">
    SELECT MAX(invoiceNum) max,min(invoiceNum) min,sum(Money) money
    from invoice
    where UserID = #{userId,jdbcType=INTEGER} and DailyState=#{dailyState,jdbcType=INTEGER} and State!=2 and CreationTime between #{begin} and #{end}
  </select>

  <select id="selectDel" parameterType="hashmap" resultType="java.lang.String">
    SELECT InvoiceNum
    from invoice
    where UserID = #{userId,jdbcType=INTEGER} and DailyState=#{dailyState,jdbcType=INTEGER} and State=2 and CreationTime between #{begin} and #{end}
  </select>

  <select id="selectAgain" parameterType="hashmap" resultType="java.lang.String">
    SELECT InvoiceNum
    from invoice
    where UserID = #{userId,jdbcType=INTEGER} and DailyState=#{dailyState,jdbcType=INTEGER} and State=5 and CreationTime between #{begin} and #{end}
  </select>

  <select id="selectlist" parameterType="hashmap" resultType="cn.his.entity.Invoice">
    SELECT InvoiceNum,Money,State,FeeType,CaseNumber,RealName
    from invoice
    JOIN register on invoice.RegistID=register.id
    where invoice.UserID = #{userId,jdbcType=INTEGER} and DailyState=#{dailyState,jdbcType=INTEGER}  and CreationTime between #{begin} and #{end}
  </select>

  <select id="getCount"  resultType="java.lang.Integer">
    select count(*)
    from invoice
  </select>

  <insert id="insert" parameterType="cn.his.entity.Invoice">
    insert into invoice (InvoiceNum, Money,
      State, CreationTime, UserID, 
      RegistID, FeeType, Back, 
      DailyState)
    values (#{invoicenum,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL},
      3, now(), #{userid,jdbcType=INTEGER},
       #{registid,jdbcType=INTEGER}, #{feetype,jdbcType=INTEGER}, #{back,jdbcType=VARCHAR},
      0)
  </insert>


  <update id="updateMoney" parameterType="cn.his.entity.Invoice">
    update invoice
    set
      Money = #{money,jdbcType=DECIMAL},
      State = 5
    where ID = #{id,jdbcType=INTEGER}
  </update>



  <update id="updateState5" parameterType="cn.his.entity.Invoice">
    update invoice
    set
      State = 5
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateState6" parameterType="cn.his.entity.Invoice">
    update invoice
    set
      State = 6
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateDailyState" parameterType="hashmap">
    update invoice
    set
      DailyState=1
    where UserID = #{userId,jdbcType=INTEGER} and CreationTime between #{begin} and #{end} and DailyState!=1
  </update>

</mapper>